const UuAppObjectStoreError = require("./uu-app-object-store-error");
const UPGRADE_ERROR_PREFIX = `${UuAppObjectStoreError.ERROR_PREFIX}uuAppObjectStore/`;

const DataUpgradeForObjectStoreg02 = {
  UC_CODE: `${UPGRADE_ERROR_PREFIX}dataUpgradeTog02/`,

  InvalidDtoIn: class extends UuAppObjectStoreError {
    constructor() {
      super(...arguments);
      this.code = `${DataUpgradeForObjectStoreg02.UC_CODE}invalidDtoIn`;
      this.message = "DtoIn is not valid.";
    }
  },

  SchemaListContainsNonExistingSchemas: class extends UuAppObjectStoreError {
    constructor() {
      super(...arguments);
      this.code = `${DataUpgradeForObjectStoreg02.UC_CODE}schemaListContainsNonExistingSchemas`;
      this.message = "dtoIn.schemaList contains non existing schemas.";
    }
  },
};

const MonitorDataUpgradeForObjectStoreg02 = {
  UC_CODE: `${UPGRADE_ERROR_PREFIX}monitorDataUpgradeTog02/`,

  InvalidDtoIn: class extends UuAppObjectStoreError {
    constructor() {
      super(...arguments);
      this.code = `${MonitorDataUpgradeForObjectStoreg02.UC_CODE}invalidDtoIn`;
      this.message = "DtoIn is not valid.";
    }
  },

  OperationKillByOpidNotFound: class extends UuAppObjectStoreError {
    constructor() {
      super(...arguments);
      this.code = `${MonitorDataUpgradeForObjectStoreg02.UC_CODE}operationKillByOpidNotFound`;
      this.message = "Kill operation id was not found in active operations.";
    }
  },
};

module.exports = {
  DataUpgradeForObjectStoreg02,
  MonitorDataUpgradeForObjectStoreg02,
};
