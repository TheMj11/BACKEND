/* eslint-disable */
const authorizeObjectArtifactType = shape({
  authorizationStrategy: constant("artifact").isRequired(),
  artifactId: id().isRequired("artifactCode"),
  artifactCode: objectCode()
});

const authorizeObjectBoundArtifactType = shape({
  authorizationStrategy: constant("boundArtifact").isRequired(),
  uuTerritoryBaseUri: uri(true).isRequired(),
  boundArtifactId: id().isRequired("boundArtifactCode"),
  boundArtifactCode: objectCode(),
  boundArtifactProfileMap: map(string(), array(string(), 1, 32), 32).isRequired()
});

const authorizeObjectRoleGroupInterfaceType = shape({
  authorizationStrategy: constant("roleGroupInterface").isRequired(),
  roleGroupUriMap: map(string(), uri(true), 32).isRequired()
});

const authorizeObjectUuIdentityListType = shape({
  authorizationStrategy: constant("uuIdentityList"),
  permissionMap: map(uuIdentity(), array(string(), 1, 32)).isRequired()
});

const sysSetAuthStrategyArtifactDtoInType = shape({
  authorizationStrategy: constant("artifact").isRequired(),
  synchronizeArtifactBasicAttributes: boolean(),
  uuTerritoryBaseUri: uri(true).isRequired(),
  artifactId: id().isRequired("artifactCode"),
  artifactCode: objectCode()
});

const sysSetAuthStrategyBoundArtifactDtoInType = authorizeObjectBoundArtifactType;

const sysSetAuthStrategyUuIdentityListDtoInType = authorizeObjectUuIdentityListType;

const sysSetAuthStrategyRoleGroupInterfaceDtoInType = authorizeObjectRoleGroupInterfaceType;

