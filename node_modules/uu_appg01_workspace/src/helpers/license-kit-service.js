"use strict";

const {
  AppClient,
  PerflogHandler,
  UriHandler,
  SessionHandler,
  CsrfTokenHandler,
  RemoteErrorHandler,
  RetryHandler,
  TransformParametersHandler,
} = require("uu_appg01_core-appclient");
const { LoggerFactory } = require("uu_appg01_core-logging");
const { UriBuilder } = require("uu_appg01_core-uri");

const { UuLicenseKitBaseUriNotConfiguredError } = require("../api/errors/workspace-license-error.js");

const DEFAULT_INTERCEPTORS = [
  PerflogHandler,
  UriHandler,
  SessionHandler,
  CsrfTokenHandler,
  RemoteErrorHandler,
  RetryHandler,
  TransformParametersHandler,
];

const useCaseMap = {
  LIST_BY_SEARCH_KEY: "license/listBySearchKey",
};

class LicenseKitService {
  constructor(uuLicenseKitBaseUri) {
    this._baseUri = uuLicenseKitBaseUri;
    this._appClient = new AppClient({ interceptors: DEFAULT_INTERCEPTORS });
    this._logger = LoggerFactory.get();
  }

  async listBySearchkey(searchKey, session) {
    if (!this._baseUri) {
      throw new UuLicenseKitBaseUriNotConfiguredError();
    }

    const listBySearchKeyUri = UriBuilder.parse(this._baseUri).setUseCase(useCaseMap.LIST_BY_SEARCH_KEY);
    return await this._appClient.cmdGet(listBySearchKeyUri, { searchKey }, { session });
  }
}

module.exports = LicenseKitService;
