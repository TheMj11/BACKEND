const { AppClient, PerflogHandler, UriHandler, SessionHandler, CsrfTokenHandler, RemoteErrorHandler, RetryHandler, TransformParametersHandler } = require("uu_appg01_core-appclient");

const DEFAULT_INTERCEPTORS = [
  PerflogHandler,
  UriHandler,
  SessionHandler,
  CsrfTokenHandler,
  RemoteErrorHandler,
  RetryHandler,
  TransformParametersHandler
];

const APP_CLIENT_RETRY_POLICY = { maxAttempts: 3, maxTimeInterval: 30000, baseTimeInterval: 100, retryCondition: { httpMethods: ["GET", "POST"], httpStatusCodes: ["5xx"] } };

class AppClientFactory {
  
  /** 
   * Prepare AppClient with standard interceptors and retry policy.
   * 
   * Since we depend on an implementation that does not have interceptors 
   * attached to it, they are set to the returned instance here.
   */
  static createAppClient(opts = {}) {
    let result = new AppClient(Object.assign(opts, { interceptors: DEFAULT_INTERCEPTORS, retryPolicy: APP_CLIENT_RETRY_POLICY }));
    return result;
  }
  
}

module.exports = AppClientFactory;